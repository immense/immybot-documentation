import{_ as c,c as p,a3 as n,b as s,w as t,a4 as i,B as u,o,G as r,a as l}from"./chunks/framework.CF3HqmxZ.js";const A=JSON.parse('{"title":"Core Concepts","description":"","frontmatter":{},"headers":[],"relativePath":"core-concepts.md","filePath":"core-concepts.md"}'),m={name:"core-concepts.md"};function d(h,e,g,f,y,C){const a=u("Mermaid");return o(),p("div",null,[e[3]||(e[3]=n('<h1 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h1><p>This guide explains the fundamental concepts of ImmyBot that you&#39;ll need to understand to use the platform effectively. Each concept builds on the previous ones to create a comprehensive automation system.</p><h2 id="deployments" tabindex="-1">Deployments <a class="header-anchor" href="#deployments" aria-label="Permalink to &quot;Deployments&quot;">​</a></h2><p>Deployments are the central concept in ImmyBot. They define how computers &quot;should be&quot; configured.</p><p>A deployment consists of:</p><ul><li><strong>Type</strong>: Software, Task, or Configuration</li><li><strong>Content</strong>: The specific software, task, or configuration to apply</li><li><strong>Targets</strong>: The computers, users, or groups that should receive this deployment</li><li><strong>Settings</strong>: Additional options that control how the deployment behaves</li></ul>',6)),(o(),s(i,null,{default:t(()=>[r(a,{id:"mermaid-37",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BDeployment%5D%20--%3E%7Ccontains%7C%20B%5BType%5D%0A%20%20%20%20A%20--%3E%7Ccontains%7C%20C%5BContent%5D%0A%20%20%20%20A%20--%3E%7Ccontains%7C%20D%5BTargets%5D%0A%20%20%20%20A%20--%3E%7Ccontains%7C%20E%5BSettings%5D%0A%20%20%20%20D%20--%3E%7Ccan%20be%7C%20F%5BComputers%5D%0A%20%20%20%20D%20--%3E%7Ccan%20be%7C%20G%5BUsers%5D%0A%20%20%20%20D%20--%3E%7Ccan%20be%7C%20H%5BGroups%5D%0A%20%20%20%20D%20--%3E%7Ccan%20be%7C%20I%5BFilter%20Scripts%5D%0A"})]),fallback:t(()=>e[0]||(e[0]=[l(" Loading... ")])),_:1})),e[4]||(e[4]=n('<p>Think of deployments as similar to Group Policy Objects in Windows environments, but more powerful and flexible.</p><blockquote><p><strong>Example</strong>: A deployment might specify that &quot;All accounting computers should have QuickBooks 2023 installed.&quot;</p></blockquote><h2 id="maintenance-sessions" tabindex="-1">Maintenance Sessions <a class="header-anchor" href="#maintenance-sessions" aria-label="Permalink to &quot;Maintenance Sessions&quot;">​</a></h2><p>Maintenance Sessions are the mechanism through which ImmyBot applies deployments to computers. When a maintenance session runs, ImmyBot:</p><ol><li>Identifies all deployments that apply to the computer</li><li>Determines the current state of the computer</li><li>Creates a plan to bring the computer into compliance</li><li>Executes that plan as a series of maintenance actions</li></ol>',5)),(o(),s(i,null,{default:t(()=>[r(a,{id:"mermaid-74",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5BStart%20Maintenance%5D%20--%3E%20B%5BIdentify%20Deployments%5D%0A%20%20%20%20B%20--%3E%20C%5BCheck%20Current%20State%5D%0A%20%20%20%20C%20--%3E%20D%5BCreate%20Plan%5D%0A%20%20%20%20D%20--%3E%20E%5BExecute%20Actions%5D%0A%20%20%20%20E%20--%3E%20F%5BReport%20Results%5D%0A"})]),fallback:t(()=>e[1]||(e[1]=[l(" Loading... ")])),_:1})),e[5]||(e[5]=n('<p>Maintenance sessions can be triggered:</p><ul><li>Manually by a technician</li><li>Automatically on a schedule</li><li>During computer onboarding</li><li>Via API or integration</li></ul><h2 id="agents" tabindex="-1">Agents <a class="header-anchor" href="#agents" aria-label="Permalink to &quot;Agents&quot;">​</a></h2><p>The ImmyBot Agent is a lightweight service that runs on managed computers and communicates with the ImmyBot server. The agent:</p><ul><li>Executes commands sent from the server</li><li>Reports computer information and status</li><li>Manages software installations and configurations</li><li>Runs scripts in various contexts (System, User, etc.)</li></ul><p>There are two types of agents:</p><ul><li><strong>Full Agent</strong>: Installed permanently on managed computers</li><li><strong>Ephemeral Agent</strong>: Temporary agent used for one-time tasks or initial setup</li></ul><h2 id="tenants" tabindex="-1">Tenants <a class="header-anchor" href="#tenants" aria-label="Permalink to &quot;Tenants&quot;">​</a></h2><p>Tenants represent the organizations you manage with ImmyBot. Each tenant:</p><ul><li>Has its own set of computers and users</li><li>Can have tenant-specific deployments</li><li>May have different settings and configurations</li></ul><p>Tenants can be organized hierarchically, with parent-child relationships that allow for inheritance of certain settings and deployments.</p>',11)),(o(),s(i,null,{default:t(()=>[r(a,{id:"mermaid-169",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BMSP%5D%20--%3E%7Cparent%20of%7C%20B%5BClient%20A%5D%0A%20%20%20%20A%20--%3E%7Cparent%20of%7C%20C%5BClient%20B%5D%0A%20%20%20%20C%20--%3E%7Cparent%20of%7C%20D%5BBranch%20Office%201%5D%0A%20%20%20%20C%20--%3E%7Cparent%20of%7C%20E%5BBranch%20Office%202%5D%0A"})]),fallback:t(()=>e[2]||(e[2]=[l(" Loading... ")])),_:1})),e[6]||(e[6]=n('<h2 id="software" tabindex="-1">Software <a class="header-anchor" href="#software" aria-label="Permalink to &quot;Software&quot;">​</a></h2><p>In ImmyBot, software is more than just an application. A software definition includes:</p><ul><li><strong>Versions</strong>: Different versions of the software that can be deployed</li><li><strong>Detection Methods</strong>: Scripts that determine if the software is already installed</li><li><strong>Installation Scripts</strong>: Scripts that handle the installation process</li><li><strong>Configuration Scripts</strong>: Scripts that configure the software after installation</li></ul><p>Software can be deployed in different ways:</p><ul><li><strong>Enforced</strong>: Always installed and kept at a specific version</li><li><strong>Available</strong>: Available for users to install on-demand</li><li><strong>Removed</strong>: Actively uninstalled if found</li></ul><h2 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h2><p>Tasks are scripts or commands that perform specific actions on computers. Unlike software deployments, tasks:</p><ul><li>Don&#39;t necessarily install anything</li><li>Can be used for configuration, maintenance, or information gathering</li><li>Can run in different contexts (System, User, Metascript, Cloud)</li></ul><p>Tasks can be:</p><ul><li><strong>One-time</strong>: Run once and complete</li><li><strong>Recurring</strong>: Run on a schedule</li><li><strong>Compliance-based</strong>: Run only when a computer is out of compliance</li></ul><h2 id="execution-contexts" tabindex="-1">Execution Contexts <a class="header-anchor" href="#execution-contexts" aria-label="Permalink to &quot;Execution Contexts&quot;">​</a></h2><p>Scripts in ImmyBot can run in different contexts, each with its own capabilities and limitations:</p><ul><li><strong>System Context</strong>: Runs with SYSTEM privileges on the computer</li><li><strong>User Context</strong>: Runs in the context of a specific user</li><li><strong>Metascript Context</strong>: Runs on the ImmyBot server and can orchestrate actions across multiple computers</li><li><strong>Cloud Context</strong>: Runs in a cloud environment with access to cloud-specific APIs</li></ul><p>Understanding these contexts is crucial for writing effective scripts and troubleshooting issues.</p><h2 id="targets" tabindex="-1">Targets <a class="header-anchor" href="#targets" aria-label="Permalink to &quot;Targets&quot;">​</a></h2><p>Targets define which computers or users should receive a deployment. Targets can be based on:</p><ul><li><strong>Computer Groups</strong>: Static or dynamic groups of computers</li><li><strong>User Groups</strong>: Groups of users, often synchronized from Azure AD</li><li><strong>Filter Scripts</strong>: PowerShell scripts that dynamically determine eligibility</li><li><strong>Tenant</strong>: All computers in a specific tenant</li></ul><p>Targets allow for precise control over which computers receive which deployments, enabling you to create sophisticated deployment strategies.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand the core concepts of ImmyBot, you&#39;re ready to explore:</p><ul><li><a href="./common-workflows.html">Common Workflows</a> - Step-by-step guides for everyday tasks</li><li><a href="./creating-deployments.html">Creating Deployments</a> - Learn how to create effective deployments</li><li><a href="./scripts.html">Scripting Guide</a> - Master the art of scripting in ImmyBot</li></ul>',21))])}const w=c(m,[["render",d]]);export{A as __pageData,w as default};
