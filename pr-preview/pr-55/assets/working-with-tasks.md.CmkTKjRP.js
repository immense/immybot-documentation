import{_ as i,c as a,a3 as t,o as n}from"./chunks/framework.CF3HqmxZ.js";const E=JSON.parse('{"title":"Working with Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"working-with-tasks.md","filePath":"working-with-tasks.md"}'),e={name:"working-with-tasks.md"};function l(h,s,p,k,r,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="working-with-tasks" tabindex="-1">Working with Tasks <a class="header-anchor" href="#working-with-tasks" aria-label="Permalink to &quot;Working with Tasks&quot;">​</a></h1><p>Tasks in ImmyBot are powerful scripts that perform specific actions on computers. This guide explains how to create, manage, and deploy tasks effectively.</p><h2 id="understanding-tasks" tabindex="-1">Understanding Tasks <a class="header-anchor" href="#understanding-tasks" aria-label="Permalink to &quot;Understanding Tasks&quot;">​</a></h2><p>Unlike software deployments, tasks:</p><ul><li>Don&#39;t necessarily install anything</li><li>Can be used for configuration, maintenance, or information gathering</li><li>Can run in different contexts (System, User, Metascript, Cloud)</li><li>Can be one-time, recurring, or compliance-based</li></ul><h2 id="task-execution-contexts" tabindex="-1">Task Execution Contexts <a class="header-anchor" href="#task-execution-contexts" aria-label="Permalink to &quot;Task Execution Contexts&quot;">​</a></h2><p>ImmyBot supports four execution contexts for tasks:</p><h3 id="system-context" tabindex="-1">System Context <a class="header-anchor" href="#system-context" aria-label="Permalink to &quot;System Context&quot;">​</a></h3><ul><li>Runs with SYSTEM privileges on the computer</li><li>Ideal for system-level changes and configurations</li><li>Has access to all local resources</li><li>Cannot interact with user interfaces</li></ul><h3 id="user-context" tabindex="-1">User Context <a class="header-anchor" href="#user-context" aria-label="Permalink to &quot;User Context&quot;">​</a></h3><ul><li>Runs in the context of a specific user</li><li>Ideal for user-specific configurations</li><li>Can interact with user interfaces</li><li>Limited to user permissions</li></ul><h3 id="metascript-context" tabindex="-1">Metascript Context <a class="header-anchor" href="#metascript-context" aria-label="Permalink to &quot;Metascript Context&quot;">​</a></h3><ul><li>Runs on the ImmyBot server</li><li>Can orchestrate actions across multiple computers</li><li>Ideal for coordinating complex workflows</li><li>Cannot directly access computer resources</li></ul><h3 id="cloud-context" tabindex="-1">Cloud Context <a class="header-anchor" href="#cloud-context" aria-label="Permalink to &quot;Cloud Context&quot;">​</a></h3><ul><li>Runs in a cloud environment</li><li>Has access to cloud-specific APIs</li><li>Ideal for interacting with cloud services</li><li>Cannot directly access computer resources</li></ul><h2 id="creating-tasks" tabindex="-1">Creating Tasks <a class="header-anchor" href="#creating-tasks" aria-label="Permalink to &quot;Creating Tasks&quot;">​</a></h2><p>Follow these steps to create a new task:</p><ol><li><p><strong>Navigate to Tasks</strong></p><ul><li>Click on <strong>Tasks</strong> in the left sidebar</li><li>Click <strong>Create Task</strong></li></ul></li><li><p><strong>Enter Basic Information</strong></p><ul><li>Enter a descriptive name for the task</li><li>(Optional) Add a description</li><li>Select the execution context (System, User, Metascript, Cloud)</li></ul></li><li><p><strong>Write the Script</strong></p><ul><li>Write or paste your PowerShell script in the editor</li><li>Use ImmyBot helper functions as needed</li><li>Add comments to explain complex sections</li></ul></li><li><p><strong>Configure Parameters</strong></p><ul><li>Click <strong>Add Parameter</strong> to create script parameters</li><li>For each parameter: <ul><li>Enter a name</li><li>Select a type (String, Number, Boolean, etc.)</li><li>Set a default value (optional)</li><li>Add a description</li><li>Configure validation rules (optional)</li></ul></li></ul></li><li><p><strong>Configure Success Criteria</strong></p><ul><li>Define what constitutes successful execution</li><li>Options include: <ul><li>Exit code</li><li>Output contains</li><li>Custom condition</li></ul></li></ul></li><li><p><strong>Save the Task</strong></p><ul><li>Click <strong>Save</strong> to create the task</li><li>The task is now available for use in deployments</li></ul></li></ol><h2 id="task-examples" tabindex="-1">Task Examples <a class="header-anchor" href="#task-examples" aria-label="Permalink to &quot;Task Examples&quot;">​</a></h2><p>Here are some common task examples to help you get started:</p><h3 id="system-context-example-clear-temporary-files" tabindex="-1">System Context Example: Clear Temporary Files <a class="header-anchor" href="#system-context-example-clear-temporary-files" aria-label="Permalink to &quot;System Context Example: Clear Temporary Files&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clear temporary files to free up disk space</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tempFolders </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;C:\\Windows\\Temp\\*&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TEMP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($folder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $tempFolders) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Write-Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Clearing </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$folder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Remove-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path $folder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Recurse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ErrorAction SilentlyContinue</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Write-Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Successfully cleared </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$folder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Write-Warning</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Failed to clear </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$folder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Write-Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Temporary files cleanup complete&quot;</span></span></code></pre></div><h3 id="user-context-example-configure-outlook-signature" tabindex="-1">User Context Example: Configure Outlook Signature <a class="header-anchor" href="#user-context-example-configure-outlook-signature" aria-label="Permalink to &quot;User Context Example: Configure Outlook Signature&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure Outlook signature for the current user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$userName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USERNAME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$userProfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USERPROFILE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signaturePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$userProfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\AppData\\Roaming\\Microsoft\\Signatures&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create signature directory if it doesn&#39;t exist</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Test-Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $signaturePath)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    New-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path $signaturePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ItemType Directory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create signature file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signatureContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">John Doe</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">IT Support Specialist</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Contoso Ltd.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Email: john.doe@contoso.com</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Phone: (555) 123-4567</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signatureFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signaturePath</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\Company Signature.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signatureContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Out-File</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilePath $signatureFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Write-Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Outlook signature created at </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$signatureFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="metascript-example-report-computers-with-low-disk-space" tabindex="-1">Metascript Example: Report Computers with Low Disk Space <a class="header-anchor" href="#metascript-example-report-computers-with-low-disk-space" aria-label="Permalink to &quot;Metascript Example: Report Computers with Low Disk Space&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get all computers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$computers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Get-ImmyComputers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Filter for online computers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$onlineComputers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $computers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Where-Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-eq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Online&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Initialize results array</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$results </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check disk space on each computer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($computer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $onlineComputers) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $scriptBlock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Get-PSDrive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PSProvider FileSystem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Where-Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Free </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-lt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Used </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-gt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Invoke-ImmyCommand</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComputerID $computer.ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScriptBlock $scriptBlock</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($result) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($drive </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $result) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            $results </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PSCustomObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ComputerName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $computer.Name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DriveLetter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $drive.Name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                TotalGB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::Round($drive.Used </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $drive.Free </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GB,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                FreeGB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::Round($drive.Free </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GB,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                PercentFree </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::Round(($drive.Free </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($drive.Used </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $drive.Free)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output results</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$results </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Format-Table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AutoSize</span></span></code></pre></div><h2 id="deploying-tasks" tabindex="-1">Deploying Tasks <a class="header-anchor" href="#deploying-tasks" aria-label="Permalink to &quot;Deploying Tasks&quot;">​</a></h2><p>Tasks can be deployed to computers in several ways:</p><h3 id="creating-a-task-deployment" tabindex="-1">Creating a Task Deployment <a class="header-anchor" href="#creating-a-task-deployment" aria-label="Permalink to &quot;Creating a Task Deployment&quot;">​</a></h3><ol><li>Navigate to <strong>Deployments</strong> in the left sidebar</li><li>Click <strong>Create Deployment</strong></li><li>Enter a name for the deployment</li><li>Select <strong>Task</strong> as the deployment type</li><li>Select your task from the dropdown</li><li>Configure task parameters</li><li>Define targets (computers, users, or groups)</li><li>Click <strong>Save</strong></li></ol><h3 id="running-tasks-manually" tabindex="-1">Running Tasks Manually <a class="header-anchor" href="#running-tasks-manually" aria-label="Permalink to &quot;Running Tasks Manually&quot;">​</a></h3><ol><li>Navigate to <strong>Computers</strong></li><li>Select one or more computers</li><li>Click <strong>Run Task</strong></li><li>Select the task to run</li><li>Configure task parameters</li><li>Click <strong>Run</strong></li></ol><h3 id="scheduling-tasks" tabindex="-1">Scheduling Tasks <a class="header-anchor" href="#scheduling-tasks" aria-label="Permalink to &quot;Scheduling Tasks&quot;">​</a></h3><ol><li>Create a task deployment</li><li>Configure the schedule: <ul><li>One-time: Runs once during maintenance</li><li>Recurring: Runs on a defined schedule</li><li>Compliance-based: Runs when a condition is met</li></ul></li><li>Save the deployment</li></ol><h2 id="task-best-practices" tabindex="-1">Task Best Practices <a class="header-anchor" href="#task-best-practices" aria-label="Permalink to &quot;Task Best Practices&quot;">​</a></h2><p>Follow these best practices for effective task management:</p><ol><li><strong>Use Descriptive Names</strong>: Make task names clear and specific</li><li><strong>Add Comments</strong>: Document your scripts with comments</li><li><strong>Handle Errors</strong>: Include error handling in your scripts</li><li><strong>Test Thoroughly</strong>: Test tasks on a small set of computers before deploying widely</li><li><strong>Use Parameters</strong>: Make tasks flexible with parameters</li><li><strong>Log Actions</strong>: Include logging in your scripts</li><li><strong>Idempotence</strong>: Design tasks to be safely re-runnable</li></ol><h2 id="troubleshooting-tasks" tabindex="-1">Troubleshooting Tasks <a class="header-anchor" href="#troubleshooting-tasks" aria-label="Permalink to &quot;Troubleshooting Tasks&quot;">​</a></h2><p>If a task isn&#39;t working as expected:</p><ol><li><strong>Check Logs</strong>: Review the task execution logs</li><li><strong>Test Locally</strong>: Run the script locally to verify it works</li><li><strong>Check Permissions</strong>: Ensure the task has the necessary permissions</li><li><strong>Verify Context</strong>: Confirm you&#39;re using the appropriate execution context</li><li><strong>Debug Mode</strong>: Add debug output to your script</li><li><strong>Simplify</strong>: Break complex tasks into smaller, simpler tasks</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand how to work with tasks in ImmyBot, you might want to explore:</p><ul><li><a href="./scripts.html">Scripting Guide</a> - Master the art of scripting in ImmyBot</li><li><a href="./immy-commands.html">Metascripts / Cloud Scripts</a> - Learn about advanced scripting capabilities</li><li><a href="./common-workflows.html">Common Workflows</a> - See examples of common task scenarios</li></ul>`,43)]))}const g=i(e,[["render",l]]);export{E as __pageData,g as default};
