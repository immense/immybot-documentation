import{_ as c,c as p,ah as n,b as s,w as t,ai as i,B as u,o as a,G as r,a as l}from"./chunks/framework.BWXOFiC5.js";const T=JSON.parse('{"title":"Core Concepts","description":"","frontmatter":{},"headers":[],"relativePath":"Documentation/GettingStarted/core-concepts.md","filePath":"Documentation/GettingStarted/core-concepts.md"}'),m={name:"Documentation/GettingStarted/core-concepts.md"};function d(h,e,f,g,y,C){const o=u("Mermaid");return a(),p("div",null,[e[3]||(e[3]=n('<h1 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h1><p>This guide explains the fundamental concepts of ImmyBot that you&#39;ll need to understand to use the platform effectively. Each concept builds on the previous ones to create a comprehensive automation system.</p><h2 id="deployments" tabindex="-1">Deployments <a class="header-anchor" href="#deployments" aria-label="Permalink to &quot;Deployments&quot;">​</a></h2><p>A deployment is a rule that specifies:</p><ol><li><strong>What</strong> should be deployed (software or task)</li><li><strong>Where</strong> it should be deployed (target computer, user)</li><li><strong>How</strong> it should be enforced (required, adhoc, or onboarding.)</li></ol>',5)),(a(),s(i,null,{default:t(()=>[r(o,{id:"mermaid-29",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BDeployment%5D%20--%3E%7CContains%7C%20B%5BMaintenance%20Item%5D%0A%20%20%20%20A%20--%3E%7CEffects%7C%20C%5BTargets%5D%0A%20%20%20%20A%20--%3E%7CEnforces%7C%20D%5BEnforcement%20Type%5D%0A%20%20%20%20A%20--%3E%7CMay%20Contain%7C%20E%5BParameters%5D%0A%20%20%20%20B%20--%3E%7Ccan%20be%7C%20F%5BSoftware%5D%0A%20%20%20%20B%20--%3E%7Ccan%20be%7C%20G%5BTask%5D%0A%20%20%20%20C%20--%3E%7Ccan%20be%7C%20I%5BComputers%5D%0A%20%20%20%20C%20--%3E%7Ccan%20be%7C%20J%5BUsers%5D%0A%0A"})]),fallback:t(()=>e[0]||(e[0]=[l(" Loading... ")])),_:1})),e[4]||(e[4]=n('<p>Think of deployments as similar to Group Policy Objects in Windows environments, but more powerful and flexible.</p><blockquote><p><strong>Example</strong>: A deployment might specify that &quot;All accounting computers should have QuickBooks 2023 installed.&quot;</p></blockquote><h2 id="maintenance-sessions" tabindex="-1">Maintenance Sessions <a class="header-anchor" href="#maintenance-sessions" aria-label="Permalink to &quot;Maintenance Sessions&quot;">​</a></h2><p>Maintenance Sessions are the mechanism through which ImmyBot applies deployments to computers. When a maintenance session runs, ImmyBot:</p><p>When a maintenance session runs, ImmyBot:</p><ol><li>Identifies all deployments that apply to the computer</li><li>Determines the current state of the computer</li><li>Creates a plan to bring the computer into compliance</li><li>Executes that plan as a series of maintenance actions</li><li>Determines the current state of the computer to see if the deployments were successful</li><li>Reports on the results of the maintance session</li></ol>',6)),(a(),s(i,null,{default:t(()=>[r(o,{id:"mermaid-79",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5BStart%20Maintenance%5D%20--%3E%20B%5BIdentify%20Deployments%5D%0A%20%20%20%20B%20--%3E%20C%5BCheck%20Current%20State%5D%0A%20%20%20%20C%20--%3E%20D%5BCreate%20Plan%5D%0A%20%20%20%20D%20--%3E%20E%5BExecute%20Actions%5D%0A%20%20%20%20E%20--%3E%20F%5BCheck%20Current%20State%5D%0A%20%20%20%20F%20--%3E%20G%5BReport%20Results%5D%0A"})]),fallback:t(()=>e[1]||(e[1]=[l(" Loading... ")])),_:1})),e[5]||(e[5]=n('<p>Maintenance sessions can be triggered:</p><ul><li>Manually by a technician</li><li>Automatically on a schedule</li><li>Via API or integration</li></ul><h2 id="agents" tabindex="-1">Agents <a class="header-anchor" href="#agents" aria-label="Permalink to &quot;Agents&quot;">​</a></h2><p>The ImmyBot Agent is a lightweight service that runs on managed computers and communicates with the ImmyBot instance. The agent:</p><ul><li>Executes commands sent from the ImmyBot instance</li><li>Reports computer information and status</li><li>Manages software installations and configurations</li><li>Runs scripts in various contexts (System, User, etc.)</li></ul><p>There are two types of agents:</p><ul><li><strong>Full Agent</strong>: Installed on managed computers, the full agent creates Ephemeral agents that do the actual work. Reccomended for all endpoints. See <a href="/Documentation/GettingStarted/quick-start-guide.html">Installation</a> for more information.</li><li><strong>Ephemeral Agent</strong>: A temporary agent created dynamically for communicating to your ImmyBot instance. Does not require the Full Agent; integrations will be used to initiate these agents where possible if the full agent is not installed or not runnning.</li></ul><h2 id="tenants" tabindex="-1">Tenants <a class="header-anchor" href="#tenants" aria-label="Permalink to &quot;Tenants&quot;">​</a></h2><p>In ImmyBot, tenants represent the organizations you manage. Each tenant:</p><ul><li>Has its own set of computers and users</li><li>Can have tenant-specific deployments</li><li>May have different settings and configurations</li></ul><p>Tenants can be organized hierarchically, with parent-child relationships that allow for inheritance of certain settings and deployments.</p>',11)),(a(),s(i,null,{default:t(()=>[r(o,{id:"mermaid-169",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BMSP%20Tenants%5D%20--%3E%7CManages%7C%20B%5BTenant%20A%20-%20Corp%20Office%20A%5D%0A%20%20%20%20A%20--%3E%7CManages%7C%20C%5BTenant%20B%20-%20Corp%20Office%20B%5D%0A%20%20%20%20C%20--%3E%7Cparent%20of%7C%20D%5BTenant%20C%20-%20Branch%20Office%201%5D%0A%20%20%20%20C%20--%3E%7Cparent%20of%7C%20E%5BTenant%20D%20-%20Branch%20Office%202%5D%0A"})]),fallback:t(()=>e[2]||(e[2]=[l(" Loading... ")])),_:1})),e[6]||(e[6]=n('<h2 id="software" tabindex="-1">Software <a class="header-anchor" href="#software" aria-label="Permalink to &quot;Software&quot;">​</a></h2><p>In ImmyBot, software is more than just an application. A software definition includes:</p><ul><li><strong>Versions</strong>: Different versions of the software that can be deployed</li><li><strong>Detection Methods</strong>: Scripts that determine if the software is already installed</li><li><strong>Installation Scripts</strong>: Scripts that handle the installation process</li><li><strong>Configuration Scripts</strong>: Scripts that configure the software after installation</li></ul><p>Software can be deployed in different ways:</p><ul><li><strong>Enforced</strong>: Always installed and kept at a specific version</li><li><strong>Removed</strong>: Actively uninstalled if found</li></ul><h2 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h2><p>Tasks are scripts or commands that perform specific actions on computers. Unlike software deployments, tasks:</p><ul><li>Don&#39;t necessarily install anything</li><li>Can be used for configuration, maintenance, or information gathering</li><li>Can run in different contexts (System, User, Metascript, Cloud)</li></ul><p>Tasks can be:</p><ul><li><strong>One-time</strong>: Run once and complete</li><li><strong>Recurring</strong>: Run on a schedule</li></ul><h2 id="execution-contexts" tabindex="-1">Execution Contexts <a class="header-anchor" href="#execution-contexts" aria-label="Permalink to &quot;Execution Contexts&quot;">​</a></h2><p>Scripts in ImmyBot can run in different contexts, each with its own capabilities and limitations:</p><ul><li><strong>System Context</strong>: Runs with SYSTEM privileges on the computer</li><li><strong>User Context</strong>: Runs in the context of a specific user <strong>User MUST be logged in</strong></li><li><strong>Metascript Context</strong>: Runs on the ImmyBot server and can orchestrate actions across multiple computers</li><li><strong>Cloud Context</strong>: Runs in a cloud environment with access to cloud-specific APIs</li></ul><p>Understanding these contexts is crucial for writing effective scripts and troubleshooting issues.</p><h2 id="targets" tabindex="-1">Targets <a class="header-anchor" href="#targets" aria-label="Permalink to &quot;Targets&quot;">​</a></h2><p>Targets define which computers or users should receive a deployment. Targets can be based on:</p><ul><li><strong>Computer Groups</strong>: Static or dynamic groups of computers</li><li><strong>User Groups</strong>: Groups of users, often synchronized from Azure AD</li><li><strong>Filter Scripts</strong>: PowerShell scripts that dynamically determine eligibility</li><li><strong>Tenant</strong>: All computers in a specific tenant</li></ul><p>Targets allow for precise control over which computers receive which deployments, enabling you to create sophisticated deployment strategies.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand the core concepts of ImmyBot, you&#39;re ready to explore:</p><ul><li><a href="/Documentation/GettingStarted/common-workflows.html">Common Workflows</a> - Step-by-step guides for everyday tasks</li><li><a href="/Documentation/HowToGuides/creating-managing-deployments.html">Creating Deployments</a> - Learn how to create effective deployments</li><li><a href="/Documentation/AdvancedTopics/scripts.html">Scripting Guide</a> - Master the art of scripting in ImmyBot</li></ul>',21))])}const b=c(m,[["render",d]]);export{T as __pageData,b as default};
