import{_ as e,c as i,ah as a,o}from"./chunks/framework.BWXOFiC5.js";const p=JSON.parse('{"title":"Creating & Managing Software","description":"","frontmatter":{},"headers":[],"relativePath":"Documentation/HowToGuides/managing-software.md","filePath":"Documentation/HowToGuides/managing-software.md"}'),n={name:"Documentation/HowToGuides/managing-software.md"};function r(s,t,l,c,d,f){return o(),i("div",null,t[0]||(t[0]=[a('<h1 id="creating-managing-software" tabindex="-1">Creating &amp; Managing Software <a class="header-anchor" href="#creating-managing-software" aria-label="Permalink to &quot;Creating &amp; Managing Software&quot;">​</a></h1><p>This guide explains how to effectively manage software across your environment using ImmyBot, from creating software definitions to deploying and maintaining software on your managed computers.</p><h2 id="understanding-software-in-immybot" tabindex="-1">Understanding Software in ImmyBot <a class="header-anchor" href="#understanding-software-in-immybot" aria-label="Permalink to &quot;Understanding Software in ImmyBot&quot;">​</a></h2><p>In ImmyBot, software is more than just an application. A software definition includes:</p><ul><li><strong>Versions</strong>: Different versions that can be deployed</li><li><strong>Detection Methods</strong>: Scripts that determine if the software is already installed</li><li><strong>Installation Scripts</strong>: Scripts that handle the installation process</li><li><strong>Configuration Scripts</strong>: Scripts that configure the software after installation</li></ul><h2 id="software-library" tabindex="-1">Software Library <a class="header-anchor" href="#software-library" aria-label="Permalink to &quot;Software Library&quot;">​</a></h2><p>The Software Library is your central repository for all software definitions:</p><h3 id="browsing-the-software-library" tabindex="-1">Browsing the Software Library <a class="header-anchor" href="#browsing-the-software-library" aria-label="Permalink to &quot;Browsing the Software Library&quot;">​</a></h3><ol><li>Navigate to <strong>Library</strong> &gt; <strong>Software</strong> in the left sidebar</li><li>Browse the list of available software</li><li>Use filters to narrow down the list</li><li>Clicking on any existing software will bring you to the Software Details page.</li></ol><h3 id="software-details" tabindex="-1">Software Details <a class="header-anchor" href="#software-details" aria-label="Permalink to &quot;Software Details&quot;">​</a></h3><p>Click on any software to view detailed information:</p><ul><li><strong>Software Info</strong>: General information, Icon, Notes, and reboot requirements</li><li><strong>Licensing</strong>: Configure if a license file or key is needed for installing the software. This is also for MST files if you need to apply transforms for MSI installs.</li><li><strong>Version Detection</strong>: Configure the detection method. Display Name and Upgrade code will cover most software and the version table in this section is dynamically updated based on the Search Filter provided.</li><li><strong>Scripts</strong>: Install, Uninstall, and Configuration scripts can be specified along with Upgrade Strategy and any Installation Prerequisites.</li><li><strong>Advanced Settings</strong>: Dynamic Version scripts and number of less often used types of scripts can be specified here including Post-Install, Post-Uninstall, Testing, Download. You can also specify Repair Strategy and any linked Integration type.</li></ul><h2 id="creating-software-definitions" tabindex="-1">Creating Software Definitions <a class="header-anchor" href="#creating-software-definitions" aria-label="Permalink to &quot;Creating Software Definitions&quot;">​</a></h2><p>ImmyBot comes with many pre-defined software packages, but you can also create your own:</p><h3 id="creating-basic-software" tabindex="-1">Creating Basic Software <a class="header-anchor" href="#creating-basic-software" aria-label="Permalink to &quot;Creating Basic Software&quot;">​</a></h3><ol><li>Navigate to <strong>Library</strong> &gt; <strong>Software</strong></li><li>Click <strong>New</strong></li><li>Statically versioned software can upload a file or specify a URL for the version to be created.</li><li>Dynamically versioned software can specify None here to set a dynamic version script on the next page.</li><li>Confirm adding a version to new software.</li><li>Specify a Software Name, Detection Method and any applicable scripts.</li><li>Specify a Version String for statically versioned software.</li><li>Click on Create</li></ol><h3 id="adding-software-versions" tabindex="-1">Adding Software Versions <a class="header-anchor" href="#adding-software-versions" aria-label="Permalink to &quot;Adding Software Versions&quot;">​</a></h3><ol><li>Open the software definition</li><li>Scroll to the bottom of the page to the <strong>Versions</strong> section</li><li>Click <strong>New</strong> in the Versions section</li><li>Follow the onscreen instructions to upload the installer package or create your own installation methods.</li><li>Confirm the Version string is correct</li><li>Click <strong>Save</strong> to add the version</li></ol><h3 id="version-detection-methods" tabindex="-1">Version Detection Methods <a class="header-anchor" href="#version-detection-methods" aria-label="Permalink to &quot;Version Detection Methods&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use the Terminal tab on the computer and run Detect-Software from Metascript context after installing software. Then you can look at how ImmyBot will see the Display Name and Upgrade Code in the list it returns</p></div><p>Detection methods determine if software is already installed:</p><ol><li>Open the software definition</li><li>Scroll to the <strong>Version Detection</strong> section on the software details page</li><li>Select what kind of detection you want to use <ul><li>Display name</li><li>Upgrade Code</li><li>Custom detection script</li></ul></li><li>Follow the on screen instructions to edit and live view your changes.</li></ol><div class="info custom-block"><p class="custom-block-title">Version Detection</p><p>Display Name and Upgrade Code usually work for most software.</p><p>When using Custom Detection Scripts, the software may not be displayed in inventory accurately.</p></div><h3 id="creating-installation-scripts" tabindex="-1">Creating Installation Scripts <a class="header-anchor" href="#creating-installation-scripts" aria-label="Permalink to &quot;Creating Installation Scripts&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>ImmyBot Support does not provide custom scripting support</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>We recommend using the default install scripts where possible, search for “default” in the script drop down to find various default install scripts. The Default NSIS is a great starting point for customizing your own install scripts too.</p></div><p>Installation scripts handle the software installation process:</p><ol><li>Open the software definition</li><li>Navigate to the <strong>Installation</strong> section</li><li>Click <strong>New</strong></li><li>Write or paste your PowerShell script <ul><li>Be sure to look up any silent install information that might be available from the vendor to help you write your script</li></ul></li><li>Make sure to set your Execution Context for the script appropriately on the right side.</li><li>Use ImmyBot helper functions as needed <ul><li>Review our <a href="/Documentation/AdvancedTopics/scripts.html">Scripting Guide</a> for more information.</li></ul></li><li>Click <strong>Save</strong></li></ol><h3 id="automatic-updates" tabindex="-1">Automatic Updates <a class="header-anchor" href="#automatic-updates" aria-label="Permalink to &quot;Automatic Updates&quot;">​</a></h3><p>For software that should always be on the latest version you will need to create a Dynamic Version Script. Dynamic Version scripts should return an array of objects. Each object must include at least a “Version” and “URL” property. There are several existing functions in global that start with “Get-DynamicVersion” that you can use to help build your own Dynamic Version scripts, and many examples of how to use them in global also.</p><h2 id="software-inventory" tabindex="-1">Software Inventory <a class="header-anchor" href="#software-inventory" aria-label="Permalink to &quot;Software Inventory&quot;">​</a></h2><p>ImmyBot maintains a detailed inventory of installed software:</p><h3 id="viewing-software-inventory" tabindex="-1">Viewing Software Inventory <a class="header-anchor" href="#viewing-software-inventory" aria-label="Permalink to &quot;Viewing Software Inventory&quot;">​</a></h3><ol><li>Navigate to <strong>Reporting</strong> &gt; <strong>Computer Software</strong></li><li>View all software across your environment</li><li>Filter by: <ul><li>Software name</li><li>Version</li><li>Customer</li><li>Computer</li></ul></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Sorting by Version can help to identify outdated software</p></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><p>Follow these best practices for effective software management:</p><ol><li><strong>Standardize Versions</strong>: Deploy the same version across your environment when possible</li><li><strong>Test Updates</strong>: Always test new versions before deploying widely</li><li><strong>Document Configurations</strong>: Add notes to software definitions about specific configurations</li><li><strong>Regular Audits</strong>: Periodically review your software inventory for compliance and security</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Now that you understand how to manage software in ImmyBot, you might want to explore:</p><ul><li><a href="/Documentation/HowToGuides/creating-managing-deployments.html">Creating Deployments</a> - Learn advanced deployment techniques</li><li><a href="/Documentation/HowToGuides/working-with-tasks.html">Working with Tasks</a> - Use tasks to configure and maintain software</li><li><a href="/Documentation/AdvancedTopics/scripts.html">Scripting Guide</a> - Master the art of scripting for software management</li></ul>',41)]))}const g=e(n,[["render",r]]);export{p as __pageData,g as default};
