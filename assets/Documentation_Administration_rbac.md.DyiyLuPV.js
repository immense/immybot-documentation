import{_ as t,c as a,ah as s,o as i}from"./chunks/framework.BWXOFiC5.js";const o="/assets/image-1.BrirQJfK.png",n="/assets/image-2.CIrH0XSY.png",r="/assets/image-3.CWSQJrHG.png",b=JSON.parse('{"title":"Role-Based Access Control (RBAC) System (In Active Development)","description":"","frontmatter":{},"headers":[],"relativePath":"Documentation/Administration/rbac.md","filePath":"Documentation/Administration/rbac.md"}'),l={name:"Documentation/Administration/rbac.md"};function c(p,e,m,u,h,d){return i(),a("div",null,e[0]||(e[0]=[s('<h1 id="role-based-access-control-rbac-system-in-active-development" tabindex="-1">Role-Based Access Control (RBAC) System (In Active Development) <a class="header-anchor" href="#role-based-access-control-rbac-system-in-active-development" aria-label="Permalink to &quot;Role-Based Access Control (RBAC) System (In Active Development)&quot;">‚Äã</a></h1><p>ImmyBot&#39;s RBAC system provides granular permission management, allowing you to control exactly what users can access and modify within your environment. This system has been designed with a phased approach to ensure seamless migration from legacy permissions while introducing powerful new capabilities.</p><h2 id="development-roadmap" tabindex="-1">Development Roadmap <a class="header-anchor" href="#development-roadmap" aria-label="Permalink to &quot;Development Roadmap&quot;">‚Äã</a></h2><p>Our RBAC implementation follows a structured 5-goal approach, ensuring stability and backward compatibility throughout the transition.</p><h3 id="‚úÖ-goal-1-migrate-to-rbac-behind-the-scenes-complete" tabindex="-1">‚úÖ Goal 1: Migrate to RBAC Behind the Scenes (Complete) <a class="header-anchor" href="#‚úÖ-goal-1-migrate-to-rbac-behind-the-scenes-complete" aria-label="Permalink to &quot;‚úÖ Goal 1: Migrate to RBAC Behind the Scenes (Complete)&quot;">‚Äã</a></h3><p><strong>Objective</strong>: Seamlessly transition from legacy permissions to RBAC without breaking changes or requiring user reconfiguration. Doing this allowed us to iteratively battle-test the changes to the backend over time.</p><p><strong>Status</strong>: Complete - Implemented and released over the past 8 months. Contained most of the work for the entire project.</p><p><strong>Achievement</strong>: Full feature parity with the existing permission system while laying the foundation for advanced RBAC capabilities.</p><hr><h3 id="goal-2-expose-rbac-in-the-ui-in-progress-90-complete" tabindex="-1">Goal 2: Expose RBAC in the UI - In Progress (90% complete) <a class="header-anchor" href="#goal-2-expose-rbac-in-the-ui-in-progress-90-complete" aria-label="Permalink to &quot;Goal 2: Expose RBAC in the UI - In Progress (90% complete)&quot;">‚Äã</a></h3><p><strong>Objective</strong>: Provide a clear, intuitive UI for managing users and understanding current permissions.</p><p><strong>Objective</strong>: Provide a new user management experience that maintains feature parity with current capabilities while providing insight into which specific permissions users have.</p><p><strong>Status</strong>: 90% complete - A few tasks remain, but the feature is almost across the finish line and is available for early testing.</p><h4 id="built-in-roles" tabindex="-1">Built-In Roles <a class="header-anchor" href="#built-in-roles" aria-label="Permalink to &quot;Built-In Roles&quot;">‚Äã</a></h4><p>The system includes four primary roles that mirror existing permission structures:</p><table tabindex="0"><thead><tr><th>Role</th><th>Description</th></tr></thead><tbody><tr><td><strong>MSP Administrator</strong></td><td>Complete administrative access across all tenants</td></tr><tr><td><strong>MSP User</strong></td><td>Broad access with specific limitations</td></tr><tr><td><strong>Tenant Administrator</strong></td><td>Complete access within assigned tenant(s)</td></tr><tr><td><strong>Tenant User</strong></td><td>Limited access within assigned tenant(s)</td></tr></tbody></table><p><em>Additional built-in roles maintain compatibility with existing application preferences and toggles.</em></p><h4 id="interface-screenshots" tabindex="-1">Interface Screenshots <a class="header-anchor" href="#interface-screenshots" aria-label="Permalink to &quot;Interface Screenshots&quot;">‚Äã</a></h4><p><strong>User Management View</strong></p><ul><li>Overview of all users and their assigned roles</li><li>Quick access to user modification and role assignment</li></ul><p><img src="'+o+'" alt="alt text"></p><p><strong>Role Overview</strong></p><ul><li>Summary of all roles and user assignment counts</li><li>Easy identification of role distribution</li></ul><p><img src="'+n+'" alt="alt text"></p><p><strong>Permission Details</strong></p><ul><li>Detailed breakdown of permissions for each role</li><li>Clear understanding of what each role can access</li></ul><p><img src="'+r+'" alt="alt text"></p><hr><h3 id="goal-3-role-assignments-with-tenant-scopes-70-complete" tabindex="-1">Goal 3: Role Assignments with Tenant Scopes - (70% complete) <a class="header-anchor" href="#goal-3-role-assignments-with-tenant-scopes-70-complete" aria-label="Permalink to &quot;Goal 3: Role Assignments with Tenant Scopes - (70% complete)&quot;">‚Äã</a></h3><p><strong>Objective</strong>: Enable flexible role assignment across different tenant scopes.</p><p>Today, your msp users are hard mapped to allow access to all tenants, and your non-msp users are hard mapped to only access their own tenant. Role assignments will allow you to define where a user&#39;s permissions apply. Users can have multiple assignments with different scopes, providing precise access control.</p><p><strong>Status</strong>: 70% complete - All of the groundwork is completed. We are now in the later stages, mostly focusing on ensuring all of the different scopes across different resource types work as expected.</p><h4 id="available-scopes" tabindex="-1">Available Scopes <a class="header-anchor" href="#available-scopes" aria-label="Permalink to &quot;Available Scopes&quot;">‚Äã</a></h4><h5 id="üè¢-owner-scope" tabindex="-1">üè¢ Owner Scope <a class="header-anchor" href="#üè¢-owner-scope" aria-label="Permalink to &quot;üè¢ Owner Scope&quot;">‚Äã</a></h5><ul><li><strong>Coverage</strong>: All tenants in the instance</li><li><strong>Use Case</strong>: System-wide administration</li><li><strong>Requirement</strong>: Cross-tenant role assignment permission</li></ul><h5 id="üè¨-msp-scope" tabindex="-1">üè¨ MSP Scope <a class="header-anchor" href="#üè¨-msp-scope" aria-label="Permalink to &quot;üè¨ MSP Scope&quot;">‚Äã</a></h5><ul><li><strong>Coverage</strong>: All tenants within selected MSP (including MSP tenant itself)</li><li><strong>Use Case</strong>: MSP-level management</li><li><strong>Requirements</strong>: <ul><li>Cross-tenant role assignment permission</li><li>MSP tenant selection via dropdown</li></ul></li></ul><h5 id="üè∑Ô∏è-tag-scope" tabindex="-1">üè∑Ô∏è Tag Scope <a class="header-anchor" href="#üè∑Ô∏è-tag-scope" aria-label="Permalink to &quot;üè∑Ô∏è Tag Scope&quot;">‚Äã</a></h5><ul><li><strong>Coverage</strong>: All tenants with specified tag</li><li><strong>Use Case</strong>: Group-based management</li><li><strong>Requirements</strong>: <ul><li>Cross-tenant role assignment permission</li><li>Tag selection via dropdown</li></ul></li></ul><h5 id="üéØ-specific-tenant-scope" tabindex="-1">üéØ Specific Tenant Scope <a class="header-anchor" href="#üéØ-specific-tenant-scope" aria-label="Permalink to &quot;üéØ Specific Tenant Scope&quot;">‚Äã</a></h5><ul><li><strong>Coverage</strong>: Individual selected tenant</li><li><strong>Use Case</strong>: Single tenant administration</li><li><strong>Requirement</strong>: Cross-tenant role assignment permission</li></ul><h5 id="üë§-user-s-tenant-scope" tabindex="-1">üë§ User&#39;s Tenant Scope <a class="header-anchor" href="#üë§-user-s-tenant-scope" aria-label="Permalink to &quot;üë§ User&#39;s Tenant Scope&quot;">‚Äã</a></h5><ul><li><strong>Coverage</strong>: Current user&#39;s tenant only</li><li><strong>Use Case</strong>: Self-service tenant management</li><li><strong>Requirement</strong>: Basic user management permission</li></ul><hr><h3 id="goal-4-role-assignments-with-resource-scopes-70-complete" tabindex="-1">Goal 4: Role Assignments with Resource Scopes (70% complete) <a class="header-anchor" href="#goal-4-role-assignments-with-resource-scopes-70-complete" aria-label="Permalink to &quot;Goal 4: Role Assignments with Resource Scopes (70% complete)&quot;">‚Äã</a></h3><p><strong>Objective</strong>: Provide granular control over specific resources within assigned tenants.</p><p>Resource scopes define exactly which resources a role can access, starting with computer resources.</p><p><strong>Status</strong>: 70% complete - We aim to release computers as the initial resource scope to minimize the involved changes. Most of the work has been completed.</p><h4 id="computer-resource-scopes" tabindex="-1">Computer Resource Scopes <a class="header-anchor" href="#computer-resource-scopes" aria-label="Permalink to &quot;Computer Resource Scopes&quot;">‚Äã</a></h4><h5 id="individual-computer" tabindex="-1">Individual Computer <a class="header-anchor" href="#individual-computer" aria-label="Permalink to &quot;Individual Computer&quot;">‚Äã</a></h5><ul><li><strong>Target</strong>: Specific selected computer</li><li><strong>Use Case</strong>: Technician assigned to particular machines</li></ul><h5 id="tag-based" tabindex="-1">Tag-Based <a class="header-anchor" href="#tag-based" aria-label="Permalink to &quot;Tag-Based&quot;">‚Äã</a></h5><ul><li><strong>Target</strong>: All computers with specified tag</li><li><strong>Use Case</strong>: Department or function-based access (e.g., &quot;HR-Computers&quot;)</li></ul><h5 id="computer-type" tabindex="-1">Computer Type <a class="header-anchor" href="#computer-type" aria-label="Permalink to &quot;Computer Type&quot;">‚Äã</a></h5><ul><li><strong>Target</strong>: Computers matching specified type criteria</li><li><strong>Available Types</strong>: <ul><li>All computers</li><li>Workstations and Portable Devices</li><li>Servers</li><li>Domain Controllers</li></ul></li></ul><hr><h3 id="goal-5-custom-roles-80-complete" tabindex="-1">Goal 5: Custom Roles - (80% complete) <a class="header-anchor" href="#goal-5-custom-roles-80-complete" aria-label="Permalink to &quot;Goal 5: Custom Roles - (80% complete)&quot;">‚Äã</a></h3><p><strong>Objective</strong>: Enable creation of tailored roles with specific permission combinations.</p><p><strong>Status</strong>: 80% complete - This feature is almost completed and is in final testing</p><p>Custom roles provide the ultimate flexibility in permission management, allowing you to:</p><ul><li>Create roles with precisely the permissions you need</li><li>Combine permissions in ways that match your organizational structure</li><li>Reduce over-privileging by granting only necessary access</li></ul><h2 id="benefits-of-the-new-rbac-system" tabindex="-1">Benefits of the New RBAC System <a class="header-anchor" href="#benefits-of-the-new-rbac-system" aria-label="Permalink to &quot;Benefits of the New RBAC System&quot;">‚Äã</a></h2><h3 id="enhanced-security" tabindex="-1">Enhanced Security <a class="header-anchor" href="#enhanced-security" aria-label="Permalink to &quot;Enhanced Security&quot;">‚Äã</a></h3><ul><li><strong>Principle of Least Privilege</strong>: Grant only necessary permissions</li><li><strong>Granular Control</strong>: Fine-tune access at tenant and resource levels</li><li><strong>Audit Trail</strong>: Clear visibility into who has access to what</li></ul><h3 id="operational-efficiency" tabindex="-1">Operational Efficiency <a class="header-anchor" href="#operational-efficiency" aria-label="Permalink to &quot;Operational Efficiency&quot;">‚Äã</a></h3><ul><li><strong>Flexible Assignment</strong>: Multiple role assignments per user</li><li><strong>Scope-Based Management</strong>: Organize access by business structure</li><li><strong>Automated Expiration</strong>: Time-limited access for temporary users</li></ul><h3 id="scalability" tabindex="-1">Scalability <a class="header-anchor" href="#scalability" aria-label="Permalink to &quot;Scalability&quot;">‚Äã</a></h3><ul><li><strong>Multi-Tenant Ready</strong>: Built for MSP environments</li><li><strong>Tag-Based Organization</strong>: Logical grouping of resources</li><li><strong>Custom Role Creation</strong>: Adapt to changing business needs</li></ul><h2 id="migration-path" tabindex="-1">Migration Path <a class="header-anchor" href="#migration-path" aria-label="Permalink to &quot;Migration Path&quot;">‚Äã</a></h2><p>The RBAC system has been designed for seamless transition:</p><ol><li><strong>Zero Disruption</strong>: Existing permissions continue working unchanged</li><li><strong>Gradual Adoption</strong>: Enable new features as needed</li><li><strong>Backward Compatibility</strong>: Legacy configurations remain functional</li><li><strong>Training-Free Transition</strong>: Familiar interface with enhanced capabilities</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">‚Äã</a></h2><p>As we complete the final goals, users will gain access to:</p><ul><li>Complete resource scoping across all ImmyBot resources</li><li>Full custom role creation capabilities</li><li>Advanced permission combinations</li><li>Enhanced reporting and audit features</li></ul><p><em>Stay tuned for updates as we finalize these powerful new capabilities.</em></p>',75)]))}const f=t(l,[["render",c]]);export{b as __pageData,f as default};
