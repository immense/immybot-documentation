import{_ as t,a as s}from"./chunks/Approve-Access.C0QAtHZi.js";import{_ as o,c as a,ah as i,o as r}from"./chunks/framework.BWXOFiC5.js";const f=JSON.parse('{"title":"Creating & Managing Users","description":"","frontmatter":{},"headers":[],"relativePath":"Documentation/HowToGuides/add-users.md","filePath":"Documentation/HowToGuides/add-users.md"}'),n={name:"Documentation/HowToGuides/add-users.md"};function l(c,e,u,d,g,p){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="creating-managing-users" tabindex="-1">Creating &amp; Managing Users <a class="header-anchor" href="#creating-managing-users" aria-label="Permalink to &quot;Creating &amp; Managing Users&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>We require all users to be authenticated through Azure. No personal accounts can be used. No &quot;Local ImmyBot&quot; accounts are possible</p></div><p>This guide explains how to add and manage users in ImmyBot.</p><h2 id="user-authentication-methods" tabindex="-1">User Authentication Methods <a class="header-anchor" href="#user-authentication-methods" aria-label="Permalink to &quot;User Authentication Methods&quot;">​</a></h2><p>ImmyBot uses Azure AD/Entra ID for authentication:</p><ol><li><strong>Azure AD/Entra ID Integration</strong>: Required for all ImmyBot instances</li><li><strong>Self-Registration</strong>: Allow users to request access (with admin approval)</li></ol><h2 id="adding-users-via-self-registration" tabindex="-1">Adding Users via Self-Registration <a class="header-anchor" href="#adding-users-via-self-registration" aria-label="Permalink to &quot;Adding Users via Self-Registration&quot;">​</a></h2><p>Self-registration is one way to add users to ImmyBot:</p><ol><li>Have the person navigate to your ImmyBot instance (e.g., <code>https://yourdomain.immy.bot</code>)</li><li>They will see a login screen where they can request access:</li></ol><p><img src="'+t+'" alt="User requesting access">)</p><ol start="3"><li>As an administrator, you&#39;ll see a yellow notification indicator at the top of your screen</li><li>Click the notification to review and approve the access request:</li></ol><p><img src="'+s+'" alt="Approving access request"></p><ol start="5"><li>Select the appropriate role for the user (see <a href="/Documentation/Administration/user-roles.html">User Roles and Security</a> for details)</li><li>Click <strong>Grant Access</strong> to approve their access</li></ol><h2 id="managing-people-and-users" tabindex="-1">Managing People and Users <a class="header-anchor" href="#managing-people-and-users" aria-label="Permalink to &quot;Managing People and Users&quot;">​</a></h2><p>In ImmyBot, there&#39;s an important distinction:</p><ul><li><strong>People</strong> are added to the system first (either through self-registration or Azure AD). People correspond to users you can select as the primary user of computers being deployed and are largely populated by syncing users from Azure/Microsoft Partner Center. This sync happens roughly ever hour.</li><li>These people are then assigned as <strong>users</strong> with specific roles and permissions to allow them to login to your ImmyBot instance.</li></ul><p>To manage people:</p><ol><li>Navigate to <strong>Show more</strong> &gt; <strong>People</strong></li><li>View the list of all People in your ImmyBot instance.</li><li>Click on the Edit person link to edit their details: <ul><li>Tags can be assigned to the person here</li><li>Any other changes to the details here will be overwritten by the Azure sync.</li></ul></li></ol><blockquote><p><strong>Tip</strong> If you need to force a sync for Azure people, you can do so per tenant by going to <strong>Tenants</strong> &gt; Select the tenant to sync &gt; Go to the Azure tab and click <strong>Sync Azure Details</strong></p></blockquote><p>To manage Users:</p><ol><li>Navigate to <strong>Show More</strong> &gt; <strong>Users</strong></li><li>View the list of all Users in your ImmyBot instance.</li><li>Click on the Edit User link to edit their details: <ul><li>Set an Access Expiration</li><li>Adjust current roles and permissions</li><li>If enabled, you can also Impersonate the user to see what they see. The Audit trail will reflect the session is impersonated and by whom.</li></ul></li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><p>Follow these best practices for user management:</p><ol><li><strong>Principle of Least Privilege</strong>: Assign the minimum necessary permissions</li><li><strong>Regular Audits</strong>: Periodically review user accounts and permissions</li><li><strong>Offboarding Process</strong>: Disable accounts promptly when users leave</li><li><strong>Role-Based Access</strong>: Use roles to manage permissions consistently</li><li><strong>Documentation</strong>: Maintain documentation of who has access and why</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>After adding users, you might want to explore:</p><ul><li><a href="/Documentation/Administration/user-roles.html">User Roles and Security</a> - Learn about user permissions and security</li><li><a href="/Documentation/Administration/tenant-management.html">Tenant Management</a> - Configure tenant access for users</li><li><a href="/Documentation/Integrations/azure-graph-permissions-setup.html">Azure AD/Entra ID Integration</a> - Configure Azure AD/Entra permissions</li></ul>',27)]))}const y=o(n,[["render",l]]);export{f as __pageData,y as default};
