import{_ as e,c as n,ah as a,o as s}from"./chunks/framework.BWXOFiC5.js";const o="/assets/Tenant-TenantList-BulkAction.CPZRxkef.gif",i="/assets/Tenant-Computer.BPI7Lfe6.png",g=JSON.parse('{"title":"Tenants","description":"","frontmatter":{},"headers":[],"relativePath":"Documentation/CoreFeatures/tenants-organizations.md","filePath":"Documentation/CoreFeatures/tenants-organizations.md"}'),r={name:"Documentation/CoreFeatures/tenants-organizations.md"};function l(c,t,u,h,m,d){return s(),n("div",null,t[0]||(t[0]=[a('<h1 id="tenants" tabindex="-1">Tenants <a class="header-anchor" href="#tenants" aria-label="Permalink to &quot;Tenants&quot;">​</a></h1><p>Tenants represent your customers or client organizations in ImmyBot. Each tenant is a separate entity with its own computers, users, and configurations.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><ul><li>Tenants can be created manually or synced automatically from external systems <ul><li>We recommend syncing Tenants from ConnectWise Automate, Microsoft Azure, or other supported integrations</li></ul></li><li>Tenants can be organized in a hierarchical structure with parent-child relationships</li><li>Each tenant can have its own specific settings, deployments, and maintenance windows</li></ul><h2 id="tenant-list" tabindex="-1">Tenant List <a class="header-anchor" href="#tenant-list" aria-label="Permalink to &quot;Tenant List&quot;">​</a></h2><p>All columns have a search and filter function, as well as the ability to sort said columns. You can also create new tenants manually here, and run batch actions against a selection of tenants.</p><ul><li><p>New tenants can be created manually, however we do recommend you manage tenant creation through an integration. Please see <a href="/Documentation/Administration/tenant-management.html">Tenant Management</a></p></li><li><p>Bulk actions allow you to make mass changes to tenant preferences to streamline your tenant managment where necessary.</p></li></ul><p><img src="'+o+'" alt="An image"></p><h2 id="tenant-structure" tabindex="-1">Tenant Structure <a class="header-anchor" href="#tenant-structure" aria-label="Permalink to &quot;Tenant Structure&quot;">​</a></h2><p>When you click into a tenant you will see any tags associated with the tenant at the top, and a list of tabs that pertain to the contents of the tenant or the preferences you&#39;ve set for the tenant. From this page you can:</p><ul><li><strong>Computers</strong> - Manage computers individually and en masse</li><li><strong>Sessions</strong> - Review sessions for the tenant</li><li><strong>Actions</strong> - Review actions taken against the tenant</li><li><strong>Software</strong> Review and deploy software across the computers in the tenant</li><li><strong>Software Search</strong> Search for software that exists in the tenant&#39;s endpoints</li><li><strong>Schedules</strong> - Manage schedules for deployments</li><li><strong>Preferences</strong> - Set the preferences such as business hours, time zone, and cross tenant deployment participation</li><li><strong>Edit</strong> - Edit the tenant name, slug, parent tenat, tags</li><li><strong>Azure</strong> - Manage and test the Azure connection</li></ul><p><img src="'+i+'" alt="An image"></p>',12)]))}const f=e(r,[["render",l]]);export{g as __pageData,f as default};
